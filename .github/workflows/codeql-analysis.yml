# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
#     M H D m d 
  schedule:
    - cron: '0 0 * * 5'

jobs:
  generate-info:
    name: Generate Class Info
    uses: ./.github/workflows/class_info.yml

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    needs: generate-info
    strategy:
      fail-fast: false
      matrix:
#         language: [ 'cpp', 'java', 'python' ]
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
#     - name: Autobuild
#       uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    - name: Restore Class Info Cache
      uses: actions/cache@v4
      id: restore-cache
      with:
        path: docs/llvm/ylib_class_info.cpp
        key: ylib-class-info-${{ github.sha }}

    - name: Autobuild
      run: |
        cd $GITHUB_WORKSPACE
        mkdir -p build

        # Build third_part dependencies
        (cd third_part && mkdir build_linux_x64 && cd build_linux_x64 && cmake .. -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/third_part/build_linux_x64/install -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/toolchains/linux_x64_gcc.cmake -DBUILD_YLIB_ARCH=x86_64 && cmake --build .)

        # Copy the generated class info file
        cp ${{ github.workspace }}/docs/llvm/ylib_class_info.cpp ${{ github.workspace }}/build

        # Build ylib
        cd $GITHUB_WORKSPACE
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/toolchains/linux_x64_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=x64 -DCMAKE_PREFIX_PATH=${{ github.workspace }}/third_part/build_linux_x64/install ..
        make
        make install

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
