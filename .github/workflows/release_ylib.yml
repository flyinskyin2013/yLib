name: Build yLib CI
on:
  push:
    # Sequence of patterns matched against refs/heads
    tags:
      - 'V*'

jobs:
  prepare_release:
    name: prepare_release
    runs-on: ubuntu-latest
    steps:
    - name: check out my rep
      uses: actions/checkout@v1
  
  full_source:
    needs: [prepare_release]
    name: full_source
    runs-on: ubuntu-latest
    steps:
    - name: check out my rep
      uses: actions/checkout@v1

    - name: package
      run: |
        rm -rf .git
        rm -f /tmp/ylib-${{ github.ref }}-full-source.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-full-source.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-full-source
        path: /tmp/ylib-${{ github.ref }}-full-source.zip

  ubuntu_16_04:
    needs: [prepare_release]
    runs-on: ubuntu-16.04
    steps:
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: set env and init
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        chmod +x build_deps.sh
        mkdir -p build
        
      working-directory: /home/runner/work/yLib/yLib

    - name: build third part
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        cd $GITHUB_WORKSPACE
        ./build_deps.sh All

      working-directory: /home/runner/work/yLib/yLib

    - name: build ylib
      working-directory: /home/runner/work/yLib/yLib/build
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux_x64_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=x86_64 ..
        make
        make install

    - name: package
      run: |
        cd build/install
        rm -f /tmp/ylib-${{ github.ref }}-ubuntu_16_04.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-ubuntu_16_04.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-ubuntu_16_04
        path: /tmp/ylib-${{ github.ref }}-ubuntu_16_04.zip      

  ubuntu_18_04:
    needs: [prepare_release]
    runs-on: ubuntu-18.04
    steps:
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: set env and init
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        chmod +x build_deps.sh
        mkdir -p build
        
      working-directory: /home/runner/work/yLib/yLib

    - name: build third part
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        cd $GITHUB_WORKSPACE
        ./build_deps.sh All

      working-directory: /home/runner/work/yLib/yLib

    - name: build ylib
      working-directory: /home/runner/work/yLib/yLib/build
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux_x64_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=x86_64 ..
        make
        make install

    - name: package
      run: |
        cd build/install
        rm -f /tmp/ylib-${{ github.ref }}-ubuntu_18_04.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-ubuntu_18_04.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-ubuntu_18_04
        path: /tmp/ylib-${{ github.ref }}-ubuntu_18_04.zip    


  armeabi_gcc_7_5:
    needs: [prepare_release]
    runs-on: ubuntu-18.04
    steps:
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: set env and init
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        chmod +x build_deps.sh
        mkdir -p build
        
      working-directory: /home/runner/work/yLib/yLib

    - name: build third part
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        cd $GITHUB_WORKSPACE
        ./build_deps.sh All armeabi linux

      working-directory: /home/runner/work/yLib/yLib           

    - name: build ylib
      working-directory: /home/runner/work/yLib/yLib/build
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux_armgnueabi_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=armeabi ..
        make
        make install

    - name: package
      run: |
        cd build/install
        rm -f /tmp/ylib-${{ github.ref }}-armeabi_gcc_7_5.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-armeabi_gcc_7_5.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-armeabi_gcc_7_5
        path: /tmp/ylib-${{ github.ref }}-armeabi_gcc_7_5.zip    

  armeabihf_gcc_7_5:
    needs: [prepare_release]
    runs-on: ubuntu-18.04
    steps:
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: set env and init
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        chmod +x build_deps.sh
        mkdir -p build
        
      working-directory: /home/runner/work/yLib/yLib

    - name: build third part
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        cd $GITHUB_WORKSPACE
        ./build_deps.sh All armeabihf linux

      working-directory: /home/runner/work/yLib/yLib           

    - name: build ylib
      working-directory: /home/runner/work/yLib/yLib/build
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux_armgnueabihf_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=armeabihf ..
        make
        make install

    - name: package
      run: |
        cd build/install
        rm -f /tmp/ylib-${{ github.ref }}-armeabihf_gcc_7_5.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-armeabihf_gcc_7_5.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-armeabihf_gcc_7_5
        path: /tmp/ylib-${{ github.ref }}-armeabihf_gcc_7_5.zip     


  aarch64_gcc_7_5:
    needs: [prepare_release]
    runs-on: ubuntu-18.04
    steps:
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: set env and init
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        echo $GITHUB_WORKSPACE
        ls $GITHUB_WORKSPACE
        cd $GITHUB_WORKSPACE
        chmod +x build_deps.sh
        mkdir -p build
        
      working-directory: /home/runner/work/yLib/yLib

    - name: build third part
      env:
        THIRD_PART_PATH_ROOT: /home/runner/work/yLib/yLib/third_part
      run: |
        cd $GITHUB_WORKSPACE
        ./build_deps.sh All aarch64 linux

      working-directory: /home/runner/work/yLib/yLib           

    - name: build ylib
      working-directory: /home/runner/work/yLib/yLib/build
      run: |
        cmake -DCMAKE_TOOLCHAIN_FILE=../toolchains/linux_aarch64_gcc.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=aarch64 ..
        make
        make install

    - name: package
      run: |
        cd build/install
        rm -f /tmp/ylib-${{ github.ref }}-aarch64_gcc_7_5.zip
        zip -9 -r /tmp/ylib-${{ github.ref }}-aarch64_gcc_7_5.zip .

    - name: upload-zip
      uses: actions/upload-artifact@v2
      with:
        name: ylib-${{ github.ref }}-aarch64_gcc_7_5
        path: /tmp/ylib-${{ github.ref }}-aarch64_gcc_7_5.zip     


  release_ylib:
    needs: [full_source, ubuntu_16_04, ubuntu_18_04, armeabi_gcc_7_5, armeabihf_gcc_7_5, aarch64_gcc_7_5]
    runs-on: ubuntu-latest
    steps:
    - name: download
      uses: actions/download-artifact@v2
      with:
        path: artifacts
        
    - name: checkout my rep
      uses: actions/checkout@v2

    - name: create-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: upload-full-source
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ github.ref }}-full-source/ylib-${{ github.ref }}-full-source.zip
        asset_name: ylib-${{ github.ref }}-full-source.zip
        asset_content_type: application/zip

    - name: upload-ubuntu_16_04
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ github.ref }}-ubuntu_16_04/ylib-${{ github.ref }}-ubuntu_16_04.zip
        asset_name: ylib-${{ github.ref }}-ubuntu_16_04.zip
        asset_content_type: application/zip

    - name: upload-ubuntu_18_04
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ ubuntu_18_04 }}-full-source/ylib-${{ ubuntu_18_04 }}-full-source.zip
        asset_name: ylib-${{ ubuntu_18_04 }}-full-source.zip
        asset_content_type: application/zip

    - name: upload-armeabi_gcc_7_5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ github.ref }}-armeabi_gcc_7_5/ylib-${{ github.ref }}-armeabi_gcc_7_5.zip
        asset_name: ylib-${{ github.ref }}-armeabi_gcc_7_5.zip
        asset_content_type: application/zip

    - name: upload-armeabihf_gcc_7_5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ github.ref }}-armeabihf_gcc_7_5/ylib-${{ github.ref }}-armeabihf_gcc_7_5.zip
        asset_name: ylib-${{ github.ref }}-armeabihf_gcc_7_5.zip
        asset_content_type: application/zip

    - name: upload-aarch64_gcc_7_5
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/ylib-${{ github.ref }}-aarch64_gcc_7_5/ylib-${{ github.ref }}-aarch64_gcc_7_5.zip
        asset_name: ylib-${{ github.ref }}-aarch64_gcc_7_5.zip
        asset_content_type: application/zip