/*
 * @Author: Sky
 * @Date: 2018-10-23 11:09:07
 * @LastEditors: Sky
 * @LastEditTime: 2020-07-14 18:39:00
 * @Description: 
 */

#include "core/ycommon.hpp" 


//This file is auto-generated by cmake
#include "ylib_extra_infos.cpp"


std::string  yLib::yCommon::GetyLibVersion() const noexcept{


    //return std::string("V") + std::to_string(YLIB_VERSION_MAJOR) + "." + std::to_string(YLIB_VERSION_MINOR) + "." + std::to_string(YLIB_VERSION_PATCH);
    return std::string("V") + YLIB_VERSION;
}

#ifdef _WIN32
static const std::string g_ylib_build_platform = "Windows";
#elif __linux__ || __linux
static const std::string g_ylib_build_platform = "Linux";
#elif __unix__ || __unix
static const std::string g_ylib_build_platform = "Unix";
#endif //__unix__ || __unix

static const std::string g_ylib_build_arch = YLIB_STR(YLIB_BUILD_ARCH_DEFINE);

std::string yLib::yCommon::GetyLibBuildInfo() const noexcept{

    std::string ylib_build_info;

    ylib_build_info = "--------------yLib Build Infos-----------------\n";
    ylib_build_info += "Build-Version:  " + GetyLibVersion() + " \n";
    ylib_build_info += "Build-Date:     " + std::string(__DATE__) + " \n";
    ylib_build_info += "Build-Time:     " + std::string(__TIME__) + " \n";
    ylib_build_info += "Build-Arch:     " + g_ylib_build_arch + " \n";
    ylib_build_info += "Build-Platform: " + g_ylib_build_platform + " \n";
    ylib_build_info += "-----------------------------------------------\n";


    return ylib_build_info;
}