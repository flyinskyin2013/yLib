<!--
 * @Author: Sky
 * @Date: 2019-10-21 11:48:25
 * @LastEditors: Sky
 * @LastEditTime: 2019-10-21 11:58:56
 * @Description: 
 -->
Install:
cmake, libtool and autoconf are needed.
==========
For Windows
-------------------------------------
1. For msvc
    Open vs2015/vs2017/vs2019 native cmd
    >>%comspec% /k "D:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86 or amd64

    Open powershell on windows10, download third_part
    >>cd yLib\third_part
    >>..\download_third_part.ps1     (we can skip this, because build_deps.bat will do same things.)
    
    Note:
        If show : ..\download_third_part.ps1 : 无法加载文件 E:\yLib\download_third_part.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。
            we should :
                > get-executionpolicy (get current policy)
                > get-help set-executionpolicy (help)
                > set-executionpolicy Unrestricted (pass)
                > set-executionpolicy Restricted (recovery)
    If I don't specially note that, the default shell is native-cmd.

2. For third_part resources.
    >>cd yLib
    >>build_deps.bat vs2015 x86_64

    Note:
        If cmd doesn't have cp and rm , you should add them to PATH.

3. For yLib.
    >>mkdir build_vs2015_x64 
    >>cd build_vs2015_x64 
    >>cmake -T v140,host=x64 -A x64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DBUILD_YLIB_ARCH=x86_64 .. (x64)
    >>cmake -T v142,host=x64 -A Win32 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DBUILD_YLIB_ARCH=x86 ..   (x86)
    >>cmake --build . --config Release --target install

For Linux:
-------------------------------------
run the following commmands.
1. For third_part.
    >>cd yLib
    >>chmod +x build_deps.sh
    >>./build_deps.sh All


2. For yLib.
    >>mkdir -p build 
    >>cd build && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/install -DBUILD_YLIB_ARCH=x86_64 ..
    （注意，在cmake中构建的库架构必须和上述第一步的build_deps.sh的架构对应，否则需要自行修改cmake指向特定架构的第三方库）
    >>make -j4 && make install

Defaultly,In directory(yLib/build/install), it may have those directories including cmake, examples, include, lib and so on. You can use them by following way:
1. In a cmake project,you can add following code to your CMakeLists.txt to import yLib.Then,those variables (yLib_INCLUDE_DIRS,yLib_LIBS,yLib_FOUND and yLib_LIBS_DIR ) will be defined, you can use them in your CMakeLists.txt.
>>set(yLib_DIR ylib_install_dir/cmake)
>>find_package(yLib REQUIRED)

2. In other project,you can add compiler flags to include ylib_install_dir/include and add linker flags to link ylib_install_dir/lib/libylib.so.For example:
>> gcc  -I ylib_install_dir/include -L ylib_install_dir/lib -lylib